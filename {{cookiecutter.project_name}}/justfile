{% raw %}
dev:
  poetry run python manage.py runserver_plus 0.0.0.0:8000

vite:
  npm run dev

test *ARGS:
    DJANGO_ENV=test PYTHONBREAKPOINT=ipdb.set_trace poetry run pytest -s  {{ ARGS }}

lint:
  poetry run pre-commit run --all-files
{% endraw %}
type *ARGS:
  poetry run mypy {{cookiecutter.project_name}} {% raw%} {{ ARGS }} {% endraw %}

celery:
  poetry run watchmedo auto-restart --directory={{cookiecutter.project_name}} --recursive --pattern '*.py' -- -- celery --app {{cookiecutter.project_name}} worker -E -l INFO -Q celery --pool gevent --concurrency 20
{% raw%}
makemigrations *ARGS:
  poetry run python manage.py makemigrations {{ ARGS }}

migrate *ARGS:
  poetry run python manage.py migrate {{ ARGS }}

dbshell *ARGS:
  poetry run python manage.py dbshell {{ ARGS }}

notebook:
  DJANGO_ALLOW_ASYNC_UNSAFE=true poetry run python manage.py shell_plus --notebook --no-browser

shell:
  poetry run python manage.py shell_plus

up *ARGS:
  docker-compose -f development.yml up -d {{ ARGS }}

stop *ARGS:
  docker-compose -f development.yml stop {{ ARGS }}

down *ARGS:
  docker-compose -f development.yml down {{ ARGS }}

docker-shell CONTAINER_NAME:
  docker-compose -f development.yml exec {{ CONTAINER_NAME }} bash

{% endraw %}
